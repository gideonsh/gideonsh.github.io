{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gideo\\\\Desktop\\\\home_test\\\\src\\\\components\\\\MultiPlayer.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport classes from \"./MultiPlayer.module.css\";\nimport Player from \"./Player\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst useMultiAudio = (urls, playIsOn) => {\n  _s();\n\n  const [seconds, setSeconds] = useState(0);\n  const [isPlayButtonOn, setIsPlayButtonOn] = useState(false);\n  const [loop, setLoop] = useState(false);\n  const [sources] = useState(urls.map(url => {\n    return {\n      url,\n      audio: new Audio(url)\n    };\n  }));\n  const [players, setPlayers] = useState([{\n    instroment: \"SilentStar\",\n    check: false,\n    playing: false,\n    startTime: 0,\n    duration: 0\n  }, {\n    instroment: \"Electric Guitar\",\n    check: false,\n    playing: false,\n    startTime: 0,\n    duration: 0\n  }, {\n    instroment: \"PAS3GROOVE1\",\n    check: false,\n    playing: false,\n    startTime: 0,\n    duration: 0\n  }, {\n    instroment: \"MazePolitics\",\n    check: false,\n    playing: false,\n    startTime: 0,\n    duration: 0\n  }, {\n    instroment: \"GrooveB\",\n    check: false,\n    playing: false,\n    startTime: 0,\n    duration: 0\n  }, {\n    instroment: \"FUD_120\",\n    check: false,\n    playing: false,\n    startTime: 0,\n    duration: 0\n  }, {\n    instroment: \"Bass\",\n    check: false,\n    playing: false,\n    startTime: 0,\n    duration: 0\n  }, {\n    instroment: \"stutter\",\n    check: false,\n    playing: false,\n    startTime: 0,\n    duration: 0\n  }, {\n    instroment: \"future_funk\",\n    check: false,\n    playing: false,\n    startTime: 0,\n    duration: 0\n  }]);\n\n  const toggle = targetIndex => () => {\n    const newPlayers = [...players];\n\n    if (newPlayers[targetIndex].playing === false) {\n      newPlayers[targetIndex].playing = true;\n    } else {\n      newPlayers[targetIndex].playing = false;\n    }\n\n    setPlayers(newPlayers);\n  };\n\n  useEffect(() => {\n    if (playIsOn) {\n      const interval = setInterval(() => {\n        sources.forEach((source, i) => {\n          if (players[i].playing) {\n            source.audio.load();\n            source.audio.play();\n          } else {\n            source.audio.pause();\n          }\n        });\n      }, 8000);\n      return () => clearInterval(interval);\n    } else {\n      sources.forEach((source, i) => {\n        source.audio.pause();\n      });\n      setIsPlayButtonOn(false);\n    }\n  }, [playIsOn]);\n  useEffect(() => {\n    if (!isPlayButtonOn) {\n      if (playIsOn) {\n        sources.forEach((source, i) => {\n          players[i].playing ? source.audio.play() : source.audio.pause();\n        });\n        setSeconds(8);\n        setIsPlayButtonOn(true);\n      }\n    }\n  });\n  useEffect(() => {\n    sources.forEach((source, i) => {\n      if (players[i].playing === false) {\n        source.audio.pause();\n      }\n    });\n  }, [players]);\n  return [players, toggle];\n};\n\n_s(useMultiAudio, \"Y5gVkQ8iFEXRoDCRwCwmZ4FRFhM=\");\n\nconst MultiPlayer = props => {\n  _s2();\n\n  const [players, toggle] = useMultiAudio(props.urls, props.playIsOn, props.sessionIsOn);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: players.map((player, i) => /*#__PURE__*/_jsxDEV(Player, {\n      player: player,\n      toggle: toggle(i)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(MultiPlayer, \"CfYgjYeTyjzOoInnRblJVR3vUyk=\", false, function () {\n  return [useMultiAudio];\n});\n\n_c = MultiPlayer;\nexport default MultiPlayer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MultiPlayer\");","map":{"version":3,"sources":["C:/Users/gideo/Desktop/home_test/src/components/MultiPlayer.js"],"names":["React","useState","useEffect","classes","Player","useMultiAudio","urls","playIsOn","seconds","setSeconds","isPlayButtonOn","setIsPlayButtonOn","loop","setLoop","sources","map","url","audio","Audio","players","setPlayers","instroment","check","playing","startTime","duration","toggle","targetIndex","newPlayers","interval","setInterval","forEach","source","i","load","play","pause","clearInterval","MultiPlayer","props","sessionIsOn","player"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport classes from \"./MultiPlayer.module.css\";\r\nimport Player from \"./Player\";\r\n\r\nconst useMultiAudio = (urls, playIsOn) => {\r\n  const [seconds, setSeconds] = useState(0);\r\n  const [isPlayButtonOn, setIsPlayButtonOn] = useState(false);\r\n  const [loop, setLoop] = useState(false);\r\n\r\n  const [sources] = useState(\r\n    urls.map((url) => {\r\n      return {\r\n        url,\r\n        audio: new Audio(url),\r\n      };\r\n    })\r\n  );\r\n\r\n  const [players, setPlayers] = useState([\r\n    {\r\n      instroment: \"SilentStar\",\r\n      check: false,\r\n      playing: false,\r\n      startTime: 0,\r\n      duration: 0,\r\n    },\r\n    {\r\n      instroment: \"Electric Guitar\",\r\n      check: false,\r\n      playing: false,\r\n      startTime: 0,\r\n      duration: 0,\r\n    },\r\n    {\r\n      instroment: \"PAS3GROOVE1\",\r\n      check: false,\r\n      playing: false,\r\n      startTime: 0,\r\n      duration: 0,\r\n    },\r\n    {\r\n      instroment: \"MazePolitics\",\r\n      check: false,\r\n      playing: false,\r\n      startTime: 0,\r\n      duration: 0,\r\n    },\r\n    {\r\n      instroment: \"GrooveB\",\r\n      check: false,\r\n      playing: false,\r\n      startTime: 0,\r\n      duration: 0,\r\n    },\r\n    {\r\n      instroment: \"FUD_120\",\r\n      check: false,\r\n      playing: false,\r\n      startTime: 0,\r\n      duration: 0,\r\n    },\r\n    {\r\n      instroment: \"Bass\",\r\n      check: false,\r\n      playing: false,\r\n      startTime: 0,\r\n      duration: 0,\r\n    },\r\n    {\r\n      instroment: \"stutter\",\r\n      check: false,\r\n      playing: false,\r\n      startTime: 0,\r\n      duration: 0,\r\n    },\r\n    {\r\n      instroment: \"future_funk\",\r\n      check: false,\r\n      playing: false,\r\n      startTime: 0,\r\n      duration: 0,\r\n    },\r\n  ]);\r\n\r\n  const toggle = (targetIndex) => () => {\r\n    const newPlayers = [...players];\r\n    if (newPlayers[targetIndex].playing === false) {\r\n      newPlayers[targetIndex].playing = true;\r\n    } else {\r\n      newPlayers[targetIndex].playing = false;\r\n    }\r\n\r\n    setPlayers(newPlayers);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (playIsOn) {\r\n      const interval = setInterval(() => {\r\n        sources.forEach((source, i) => {\r\n          if (players[i].playing) {\r\n            source.audio.load();\r\n            source.audio.play();\r\n          } else {\r\n            source.audio.pause();\r\n          }\r\n        });\r\n      }, 8000);\r\n      return () => clearInterval(interval);\r\n    } else {\r\n      sources.forEach((source, i) => {\r\n        source.audio.pause();\r\n      });\r\n      setIsPlayButtonOn(false);\r\n    }\r\n  }, [playIsOn]);\r\n\r\n  useEffect(() => {\r\n    if (!isPlayButtonOn) {\r\n      if (playIsOn) {\r\n        sources.forEach((source, i) => {\r\n          players[i].playing ? source.audio.play() : source.audio.pause();\r\n        });\r\n        setSeconds(8);\r\n        setIsPlayButtonOn(true);\r\n      }\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    sources.forEach((source, i) => {\r\n      if (players[i].playing === false) {\r\n        source.audio.pause();\r\n      }\r\n    });\r\n  }, [players]);\r\n\r\n  return [players, toggle];\r\n};\r\n\r\nconst MultiPlayer = (props) => {\r\n  const [players, toggle] = useMultiAudio(\r\n    props.urls,\r\n    props.playIsOn,\r\n    props.sessionIsOn\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {players.map((player, i) => (\r\n        <Player key={i} player={player} toggle={toggle(i)} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MultiPlayer;\r\n"]},"metadata":{},"sourceType":"module"}